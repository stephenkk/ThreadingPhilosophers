public class Philosopher extends Thread{
	public int philNumber;
	public String name;
	public boolean eating;
	public boolean hungry;
	public boolean thinking;
	static boolean stick0=true;	//one boolean for each chopstick
	static boolean stick1=true;	//true means not being used.
	static boolean stick2=true;
	static boolean stick3=true;
	static boolean stick4=true;

	//constructor created to require initial values to be specified
	//for philosopher number, name, 
	//whether he is eating, and whether he is hungry.
	public Philosopher(int philNumber, String name, boolean eating, boolean hungry) {
		this.philNumber = philNumber;
		this.name = name;
		this.eating = eating;
		this.hungry = hungry;
		this.thinking = thinking;

	}	
	// the run method will start a philosopher eating 
	//if he is hungry and if neither of his L or R 
	//neighbors is eating

	public void run() { 
		System.out.println("p"+ this.philNumber + " is starting");

		if (this.philNumber == 0) {
			if (stick4 == true && stick0 == true)
				zero_pick_up_sticks();
		}
		if (this.philNumber == 1) {
			if (stick0 == true && stick1 == true)

				zero_pick_up_sticks();

		}

	}	




	//Philosopher objects. 1 and 3 are initialized at false
	// to prevent all five philosophers from eating simultaneously
	// at start.
	static Philosopher p0 = new Philosopher(0,"Confucius", false, false);
	static Philosopher p1 = new Philosopher(1, "Socrates", true, true);
	static Philosopher p2 = new Philosopher(2, "Plato", false, false);
	static Philosopher p3 = new Philosopher(3, "Descartes", true, true);
	static Philosopher p4 = new Philosopher(4, "Sartre", false, false );

	//Philosopher array
	static Philosopher[] WiseTable = {p0, p1, p2, p3, p4};			


	public static void main(String[] args) {



		p0.start();		//each objects starts the run()
		p1.start();
		//p2.start();
		//p3.start();
		//p4.start();		

	}



	public void eat() {

		one_pick_up_sticks();
	}





	synchronized public void zero_pick_up_sticks() {
		if (this.philNumber == 0)  {
			System.out.println("Phil"+ this.philNumber + " stick4 = " + stick4 + " stick0 = " + stick0);
			stick4 = false;
			System.out.println("Phil" + this.philNumber + " picked up the chopstick to his"
					+ " left");
			System.out.println("Phil" + this.philNumber + " stick 4 = " + stick4);
			stick0 = false;
			System.out.println("Phil" + this.philNumber + " stick 0 = " + stick0);

			System.out.println("Phil" + this.philNumber + " picked up the chopstick to his "
					+ " right");
		}
		else if (this.philNumber == 1) {
			System.out.println("Phil" + this.philNumber + " stick0 = " + stick0 + " stick1 = " + stick1);
			stick0 = false;
			System.out.println("Phil" + this.philNumber + " stick 0 = " + stick0);
			System.out.println("Phil" + this.philNumber + " picked up the chopstick to his"
					+ " left");
			stick1 = false;
			System.out.println("Phil" + this.philNumber + " stick 1 = " + stick1);
			System.out.println("Phil" + this.philNumber + " picked up the chopstick to his"
					+ " right");
		}
	}


	synchronized public static void one_pick_up_sticks() {

		System.out.println("Phil" + this.philNumber + " stick0 = " + stick0 + " stick1 = " + stick1);
		stick0 = false;
		System.out.println("Phil" + this.philNumber + " stick 0 = " + stick0);
		System.out.println("Phil" + this.philNumber + " picked up the chopstick to his"
				+ " left");
		stick1 = false;
		System.out.println("Phil" + this.philNumber + " stick 1 = " + stick1);
		System.out.println("Phil" + this.philNumber + " picked up the chopstick to his"
				+ " right");

	}

}
	
		
	
	

	

